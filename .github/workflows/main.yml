name: Main
on:
  push:
    branches: [ "main" ]
jobs:
  tests:
    name: 'Jest Unit Tests'
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i
      - run: npm run build --if-present
      - run: npm citest
      - name: JEST Report
        uses: RedaktionsNetzwerk-Deutschland/action-jest-reporter@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  sonarcloud:
    name: SonarCloud
    needs: [tests]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          # Additional arguments for the sonarcloud scanner
          args:             
            # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
            # mandatory
            -Dsonar.projectKey=chthulu
            -Dsonar.organization=chthulu
            -Dsonar.verbose=true
            # Comma-separated paths to directories containing main source files.
            #-Dsonar.sources= # optional, default is project base directory
            # When you need the analysis to take place in a directory other than the one from which it was launched
            #-Dsonar.projectBaseDir= # optional, default is .
            # Comma-separated paths to directories containing test source files.
            #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
            # optional, default is false   
  heroku:
    name: 'Heroku'
    needs: [sonarcloud]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "chthulu" #Must be unique in Heroku
          heroku_email: "stephan.eberwijn@hotmail.com"
  discord-message:
    name: 'Discord Webhook 🤖'
    needs: [sonarcloud, heroku]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Fetch Bugs Data 📦
        uses: JamesIves/fetch-api-data-action@releases/v1
        with:
          ENDPOINT: https://sonarcloud.io/api/issues/search?projects=chthulu&types=BUG&statuses=OPEN,REOPENED
          retry: true
      - run: echo "BUG_AMOUNT=$(echo "${{ fromJson(env.FETCH_API_DATA).total }}")" >> $GITHUB_ENV
      - name: Fetch Code Smells Data 📦
        uses: JamesIves/fetch-api-data-action@releases/v1
        with:
          ENDPOINT: https://sonarcloud.io/api/issues/search?projects=chthulu&types=CODE_SMELL&statuses=OPEN,REOPENED
          retry: true
      - run: echo "CODE_SMELL_AMOUNT=$(echo "${{ fromJson(env.FETCH_API_DATA).total }}")" >> $GITHUB_ENV
      - name: Fetch Security Hotspots Data 📦
        uses: JamesIves/fetch-api-data-action@releases/v1
        with:
#           ENDPOINT: https://sonarcloud.io/api/hotspots/search?projectKey=chthulu
          ENDPOINT: https://sonarcloud.io/api/issues/search?projects=chthulu&types=VULNERABILITY&statuses=OPEN,REOPENED
          retry: true
      - run: echo "SECURITY_HOTSPOT_AMOUNT=$(echo "${{ fromJson(env.FETCH_API_DATA).total }}")" >> $GITHUB_ENV
      - name: Show Response
        run: |
          echo ${{ env.BUG_AMOUNT }}
          echo ${{ env.CODE_SMELL_AMOUNT }}
          echo ${{ env.SECURITY_HOTSPOT_AMOUNT }}
      - uses: actions/checkout@v3
      #Get project version
      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.0.6
      # Send a messgase to Discord    
      - uses: hugoalh/send-discord-webhook-ghaction@v4.2.4
        with:
          key: ${{ secrets.DISCORD_WEBHOOK }}
          payload: |
            {
              "username": "GitHub",
              "embeds": [
                {
                  "title": 'New version of `Chthulu` available: `v.${{steps.extract_version.outputs.version || 'No data'}}`!',
                  "color": 0x01ff01,
                  "thumbnail": {
                    "url": 'https://cdn.discordapp.com/avatars/532524817740464138/ef7ad87c0f26dd6c873bc3d9e19c8f15.webp',
                  },
                  "fields": [
                    {
                      "name": '🪲 Bugs',
                      "value": '> `${{env.BUG_AMOUNT || 'No data'}}`',
                      "inline": true
                    },
                    {
                      "name": '💩 Code Smells',
                      "value": '> `${{env.CODE_SMELL_AMOUNT || 'No data'}}`',
                      "inline": true
                    },
                    {
                      "name": '🛡️ Alerts',
                      "value": '> `${{env.SECURITY_HOTSPOT_AMOUNT || 'No data'}}`',
                      "inline": true
                    },
                  ],
                }
              ]
            }
  version-bump:
    name: 'Automated Version Bump'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name:  'Automated Version Bump'
        uses:  'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target-branch: 'main'
          skip-tag: 'true'
          minor-wording:  'add,Adds,new,minor'
          major-wording:  'MAJOR,cut-major,major'
          patch-wording:  'patch,fixes,fix,fixed'     # Providing patch-wording will override commits
                                            # defaulting to a patch bump.
          commit-message: 'CI: bumps version to {{version}} [skip ci]'