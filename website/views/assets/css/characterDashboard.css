/* Searchbar */
input {
    border: 2px solid var(--sidebar-color);
    color: var(--text-color);
    background-color: var(--content-color);
    padding: .5rem;
    padding-left: .8rem;
    border-radius: 20px;
}

input:focus {
    outline: 0;
}

input::placeholder {
    color: #ddd;
}


header.dashboardHeader {
    padding: 1.3em;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

header.dashboardHeader button {
    width: 6rem;
    height: 2.5rem;
    display: inline-block;
    border: none;
    margin: 0;
    font-size: .8rem;
    text-decoration: none;
    cursor: pointer;
    text-align: center;
    -webkit-appearance: none;
    -moz-appearance: none;
    background-color: var(--dashboard-color);
    border: 2px solid var(--sidebar-color);
    border-radius: 20px;
    transition: all 200ms ease;
}

header.dashboardHeader button:hover {
    transform: scale(1.2);
}

.dashboardContent>div {
    height: 240px;
    width: 400px;
    display: flex;
    flex-direction: column;
}

.dashboardContentItemTitle {
    color: white;
    font-size: .7rem;
    font-weight: 900;
    margin-left: 70px;
    margin-top: 10px;
}

.dashboardContentItemContent {
    align-self: center;
    font-size: 8rem;
}

img[alt="Construction"] {
    height: 500px;
    width: auto;
}

.dashboardContent[construction] {
    display: flex;
    justify-content: center;
    align-items: center;
}

/*CHARACTERS PAGE*/
.dashboardContent[characters] {
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    /* For the informational characters page */
}

.dashboardContent[characters] h1 {
    width: 100%;
    height: 70px;
    margin: 0;
    margin-left: 0px;
    text-align: center;
    display: flex;
    align-items: center;
    /* justify-content: center; */
    text-indent: 20px;
    position: relative;
    user-select: none;
    border: 3px solid var(--sidebar-color);
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;

}

.dashboardContent[characters] h1 input {
    position: absolute;
    margin-left: 500px;
}

/* Searchbar */

input {
    border: 2px solid var(--sidebar-color);
    color: var(--text-color);
    background-color: var(--content-color);
    padding: .5rem;
    padding-left: .8rem;
    border-radius: 20px;
}

input:focus {
    outline: 0;
}

input::placeholder {
    color: #ddd;
}

.charactersList {
    width: 100%;
    max-height: calc(100% - 70px);
    border: 3px solid var(--sidebar-color);
    border-top: 0;
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;

    display: flex;
    flex-direction: column;
    /* justify-content: center; */
    gap: 5px;
    /* align-items: flex-start; */
    padding-top: 10px;
    padding-bottom: 10px;

    padding-left: 20px;
    box-sizing: border-box;
    overflow-y: scroll;
}

.charactersList::-webkit-scrollbar {
    width: 15px;
    /* width of the entire scrollbar */
}

.charactersList::-webkit-scrollbar-track {
    background: transparent;
    /* color of the tracking area */
}

.charactersList::-webkit-scrollbar-thumb {
    background-color: var(--sidebar-color);
    /* color of the scroll thumb */
    border-radius: 15px;
    /* roundness of the scroll thumb */
    border: 5px solid transparent;
    background-clip: padding-box;
}

.characterItem.selected {
    background-color: var(--sidebar-color) !important;
    cursor: default !important;
}

.charactersList .characterItem {
    width: 100%;
    min-width: 370px;
    height: 30px;
    background-color: var(--menu-color);
    transition: all .275s ease;
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-radius: 3px;
}

.charactersList .characterItem .classIcon {
    width: 10%;
    min-width: 40px;
    height: 100%;
    /* background-color: red; */
    display: flex;
    align-items: center;
    justify-content: center;
}

.charactersList .characterItem .classIcon img {
    height: 70%;
    width: auto;
}

.charactersList .characterItem .characterFullName {
    width: calc(100% - 10% - 70px);
    min-width: 250px;
    height: 100%;
    /* background-color: yellow; */
    display: flex;
    align-items: center;
    /* justify-content: flex-start; */
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}

.charactersList .characterItem .characterFullName p {
    margin: 0;
}

.charactersList .characterItem .characterLevel {
    width: 70px;
    min-width: 70px;
    height: 100%;
    box-sizing: border-box;
    padding: 10px;
    /* background-color: blue; */
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.charactersList .characterItem .characterLevel p {
    margin: 0;
}

.charactersList .characterItem:hover {
    cursor: pointer;
    background-color: #42494c;

}

.dashboardContent[characters] .characterBox {
    height: 75%;
    width: 60%;
    display: flex;
    z-index: 1;
    /* flex-direction: row; */
    align-items: center;
    /* justify-content: space-between; */
    /* For the informational characters page */
}

.dashboardContent[characters] .characterSelectionBox {
    height: 75%;
    width: 30%;
    display: flex;
    z-index: 1;
    /* flex-direction: row; */
    align-items: center;
    /* justify-content: space-between; */
    /* For the informational characters page */
}

.dashboardContent[characters] .cardStack {
    height: 650px;
    width: 400px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
}

.dashboardContent[characters] .cardStack .characterCardHolder {
    position: absolute;
    height: 100%;
    width: 400px;
    z-index: 3;

    /* transition: all .75s; */
    /* overflow: hidden; */
}



.dashboardContent[characters] .cardStack .characterCardHolder:first-child {
    transition: transform;
    transition-duration: .75s;
    /* transition-delay: 100ms; */
    transform: translate(-30%);
    z-index: 2;
}

.dashboardContent[characters] .cardStack .characterCardHolder:nth-of-type(2) {
    transform: translate(-30%);
    z-index: 1;
}

.dashboardContent[characters] .cardStack .characterCardHolder::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    border-radius: 10px;
    transition: all 0.5s;
    z-index: 5;
}

.dashboardContent[characters] .cardStack .characterCardHolder:first-child::before {
    content: '';
    position: absolute;
    top: 50%;
    transform: translate(0, -50%) scale(2.5);
    left: 0;
    color: var(--text-color);
    opacity: 1;
    z-index: 6;
    font-family: 'Poppins', 'FontAwesome', sans-serif;
    padding-left: 5%;
    transition: all 0.5s;
}

.dashboardContent[characters] .cardStack .characterCardHolder:first-child:hover {
    transform: translate(-40%);
    cursor: pointer;
}

.dashboardContent[characters] .cardStack .characterCardHolder:first-child:hover::before,
.dashboardContent[characters] .cardStack .characterCardHolder:nth-last-child(2):hover::before {
    transform: translate(0, -50%) scale(3);
}

.dashboardContent[characters] .cardStack .characterCardHolder:first-child:hover::after,
.dashboardContent[characters] .cardStack .characterCardHolder:nth-last-child(2):hover::after {
    background-color: rgba(0, 0, 0, 0.3);
    transition-delay: 50ms;

}

.dashboardContent[characters] .cardStack .characterCardHolder:nth-last-child(2) {
    transition: transform;
    transition-duration: .75s;
    /* transition-delay: 2s; */
    transform: translate(30%);
    z-index: 2;
}

.dashboardContent[characters] .cardStack .characterCardHolder:nth-last-child(3) {
    transform: translate(30%);
    z-index: 1;
}

.dashboardContent[characters] .cardStack .characterCardHolder:nth-last-child(2)::before,
.dashboardContent[characters] .cardStack .characterCardHolder:nth-last-child(3)::before {
    content: '';
    position: absolute;
    top: 50%;
    transform: translate(0, -50%) scale(2.5);
    right: 0;
    color: var(--text-color);
    opacity: 1;
    z-index: 6;
    font-family: 'Poppins', 'FontAwesome', sans-serif;
    padding-right: 5%;
    transition: all 0.5s;
}

.dashboardContent[characters] .cardStack .characterCardHolder:nth-last-child(2):hover {
    transform: translate(40%);
    cursor: pointer;
}

.dashboardContent[characters] .cardStack .characterCardHolder .characterCard {
    position: relative;
    height: 100%;
    width: 100%;
    background: var(--menu-color);
    border-radius: 10px;
    padding: 0.8rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    -webkit-box-shadow: inset 0px 5px 3px var(--sidebar-color);
    box-shadow: inset 0px 0px 5px 3px var(--sidebar-color);
    /* inset: 10px var(--sidebar-color); */
    box-sizing: border-box;
    /* If you want to implement it in very old browser-versions */
    -webkit-user-select: none;
    /* Chrome/Safari */
    -moz-user-select: none;
    /* Firefox */
    -ms-user-select: none;
    /* IE10+ */
    /* The rule below is not implemented in browsers yet */
    -o-user-select: none;
    /* The rule below is implemented in most browsers by now */
    user-select: none;
    z-index: 10;
    /* overflow: hidden; */
}

.dashboardContent[characters] .cardStack .characterCardHolder:not(:last-child) .characterCard {
    z-index: 0;

}

.dashboardContent[characters] .cardStack .characterCard span.characterName {
    font-weight: bold;
}

.dashboardContent[characters] .cardStack .characterCard span.characterLevel {
    position: absolute;
    font-weight: bold;
    font-size: 3.5rem;
    right: 1rem;
    top: 0.5rem;
}

.dashboardContent[characters] .cardStack .characterCard div.infoBundle {
    width: 100%;
    height: 50px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    /* background: green; */
}

.dashboardContent[characters] .cardStack .characterCard .characterDescription {
    width: 77%;
    height: 175px;
    overflow-y: scroll;
    /* background: green; */
    font-size: .8rem;
    text-align: justify;
}

.dashboardContent[characters] .cardStack .characterCard .characterDescription::-webkit-scrollbar {
    width: 0px;
    /* width of the entire scrollbar */
}

.dashboardContent[characters] .cardStack .characterCard div.infoBundle span {
    display: flex;
    flex-direction: column;
    text-transform: uppercase;
    font-weight: bold;
}

span.characterRace, span.characterClass, span.characterBackground {
    text-transform: capitalize !important;
    font-weight: normal !important;
}

.dashboardContent[characters] .cardStack .characterCard div.characterImageHolder {
    width: 100%;
    height: 300px;
    /* background: green; */
    border-radius: 5px;
    overflow: hidden;
    display: flex;
    justify-content: center;
}

.dashboardContent[characters] .cardStack .characterCard div.characterImageHolder img {
    width: auto;
    height: 100%;
    border-radius: 5px;
}

ul.arrow {
    list-style: none;
    font-size: 500%;
    cursor: pointer;
    padding: 0;
    margin: 0;
}

ul.arrow:hover li::before {
    border-color: #fff;
    transform: scale(1.2);
    /* For the arrow (which is a border) */
}

li.left {
    transform: rotate(-135deg);
}

li.right {
    transform: rotate(45deg);
}

li.down {
    transform: rotate(180deg);
}

li::before {
    position: relative;
    /* top: 3pt; Uncomment this to lower the icons as requested in comments*/
    content: "";
    display: inline-block;
    /* By using an em scale, the arrows will size with the font */
    width: 0.4em;
    height: 0.4em;
    border-right: 0.2em solid var(--text-color);
    border-top: 0.2em solid var(--text-color);
    margin-right: 0.5em;
    transition: all 250ms ease;
}

/* Change color */
li:hover::before {
    border-color: #fff;
    /* For the arrow (which is a border) */
}

ul.arrow:active li::before {
    /* animation css */
    transform: skew(10deg, 10deg)
}

.rightCardToTopMiddle {
    animation-name: rightCardToTopMiddle;
    animation-duration: .75s;
    animation-fill-mode: forwards;
}

.leftCardToTopMiddle {
    animation-name: leftCardToTopMiddle;
    animation-duration: .75s;
    animation-fill-mode: forwards;
}

@keyframes leftCardToTopMiddle {
    0% {
        transform: translate(-40%);
        z-index: 2;
    }

    25% {
        transform: translate(-60%);
    }

    50% {
        transform: translate(0%);
        z-index: 10;
    }

    75% {
        transform: translate(0%);
    }

    100% {
        transform: translate(0%);
        z-index: 10;
    }
}

.characterCardContentVisible {
    animation-name: characterCardContentVisible;
    animation-duration: .75s;
    animation-fill-mode: forwards;
}

.characterCardContentDarkened {
    animation-name: characterCardContentDarkened;
    animation-duration: .75s;
    animation-fill-mode: forwards;
}

@keyframes characterCardContentVisible {
    from {
        z-index: 0;
    }

    to {
        z-index: 10;


    }
}

@keyframes characterCardContentDarkened {
    from {
        z-index: 10;
    }

    to {
        z-index: 0;
    }
}

@keyframes rightCardToTopMiddle {
    0% {
        transform: translate(40%);
        z-index: 2;
    }

    25% {
        transform: translate(60%);
    }

    50% {
        transform: translate(0%);
        z-index: 10;
    }

    75% {
        transform: translate(0%);
    }

    100% {
        transform: translate(0%);
        z-index: 10;
    }
}

.middleCardToBehindLeft {
    animation-name: middleCardToBehindLeft;
    animation-duration: .75s;
    /* animation-delay: 400ms; */
    animation-fill-mode: forwards;
}



@keyframes middleCardToBehindLeft {
    0% {
        transform: translate(0%);
        z-index: 4;
    }

    25% {
        transform: translate(-60%);
    }

    50% {
        transform: translate(-30%);
        z-index: 3;
    }

    75% {
        transform: translate(-30%);
    }

    100% {
        transform: translate(-30%);
        z-index: 3;
    }
}

.middleCardToBehindRight {
    animation-name: middleCardToBehindRight;
    animation-duration: .75s;
    /* animation-delay: 400ms; */
    animation-fill-mode: forwards;
}



@keyframes middleCardToBehindRight {
    0% {
        transform: translate(0%);
        z-index: 4;
    }

    25% {
        transform: translate(60%);
    }

    50% {
        transform: translate(30%);
        z-index: 3;
    }

    75% {
        transform: translate(30%);
    }

    100% {
        transform: translate(30%);
        z-index: 3;
    }
}

.leftCardToBehindMiddle {
    animation-name: leftCardToBehindMiddle;
    animation-duration: 1s;
    animation-fill-mode: forwards;
}



@keyframes leftCardToBehindMiddle {
    0% {
        transform: translate(-30%);
    }

    25% {
        transform: translate(-30%);
    }

    50% {
        transform: translate(0%);
    }

    75% {
        transform: translate(0%);
    }

    100% {
        transform: translate(0%);
    }
}

.rightCardToBehindMiddle {
    animation-name: rightCardToBehindMiddle;
    animation-duration: 1s;
    animation-fill-mode: forwards;
}



@keyframes rightCardToBehindMiddle {
    0% {
        transform: translate(30%);
    }

    25% {
        transform: translate(30%);
    }

    50% {
        transform: translate(0%);
    }

    75% {
        transform: translate(0%);
    }

    100% {
        transform: translate(0%);
    }
}

.behindMiddleCardToLeft {
    animation-name: behindMiddleCardToLeft;
    animation-duration: 1s;
    animation-fill-mode: forwards;
}

@keyframes behindMiddleCardToLeft {
    0% {
        transform: translate(0%);
    }

    25% {
        transform: translate(0%);
    }

    50% {
        transform: translate(-30%);
    }

    75% {
        transform: translate(-30%);
    }

    100% {
        transform: translate(-30%);
    }
}

.behindMiddleCardToRight {
    animation-name: behindMiddleCardToRight;
    animation-duration: 1s;
    animation-fill-mode: forwards;
}

@keyframes behindMiddleCardToRight {
    0% {
        transform: translate(0%);
    }

    25% {
        transform: translate(0%);
    }

    50% {
        transform: translate(30%);
    }

    75% {
        transform: translate(30%);
    }

    100% {
        transform: translate(30%);
    }
}


@keyframes characterCardContentToBlank {
    from {
        opacity: 1
    }

    to {


        opacity: 0
    }
}

@keyframes characterCardContentToContent {
    from {
        z-index: 10;
    }

    to {
        z-index: 0;
    }
}

.characterCardContentToBlank {
    animation-name: characterCardContentToBlank;
    animation-duration: .75s;
    animation-fill-mode: forwards;
}

.characterCardContentToContent {
    animation-name: characterCardContentToContent;
    animation-duration: .75s;
    animation-fill-mode: forwards;
}

.dashboardContent[characters] .cardStack .characterCardHolder:last-child {
    z-index: 3;
    transform: translate(0%);
}