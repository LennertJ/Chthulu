extends ./template/baseDashboard.pug
block scripts
    //- script(type='text/javascript', src='https://www.gstatic.com/charts/loader.js')
    script(src="https://unpkg.com/embla-carousel/embla-carousel.umd.js")
    //- script(src="https://pugjs.org/js/pug.js")
    //- script(src="https://cdn.jsdelivr.net/npm/fs-cdn@0.1.0/index.min.js")
    //- script(src="https://cdnjs.cloudflare.com/ajax/libs/blueimp-JavaScript-Templates/3.20.0/js/tmpl.min.js")
    //- script(src="https://cdn.jsdelivr.net/npm/pug-runtime@3.0.1/index.min.js")

    script
        include ./static/theme.js
        include ./static/sessionsDashboard.js
        | var guildID = !{JSON.stringify(selectedGuildId)};
        //- include ./static/mainDashboardStatistics.js
    script. 
        //- const pug = require('pug');
        //- var fs = require('fs'); 
        //- var characters = !{JSON.stringify(characters)}; 
        //- var allQuests = !{JSON.stringify(allQuests)}; 
        var sessions = !{JSON.stringify(sessions)}; 
        //- var locations = !{JSON.stringify(locations)};
        

block styles 
    style 
        include ./assets/css/main.css
        include ./assets/css/sidebar.css
        include ./assets/css/menu.css
        include ./assets/css/dashboard.css
        include ./assets/css/sessionsDashboard.css
        include ./assets/css/modal.css


block dashboardContent 
    include ./components/createSessionPopup.pug
    .dashboardContent(sessions=true)
        section
            details
                summary(data-type="requested" data-session-date=`${sessions.filter(session => session.session_status === 'CREATED')[0] ? sessions.filter(session => session.session_status === 'CREATED')[0].date : 'No data'}`)
                    h1 
                        i.fas.fa-chevron-right.fa-xs
                        span.count #{sessions.filter(session => session.session_status === 'CREATED').length}
                        span.title Requested Sessions
                        #createSessionRequest + Create Session
                .embla(data-type="requested")
                    .embla__viewport
                        .embla__container
                            each session in sessions.filter(session => session.session_status === 'CREATED')
                                include ./components/discordSessionEmbed.pug
                .embla__dots
                script(type='text/template', id='embla-dot-template')
                    button(class="embla__dot" type='button')
        section
            details
                summary(data-type="planned" data-session-date=`${sessions.filter(session => session.session_status === 'PLANNED')[0] ? sessions.filter(session => session.session_status === 'PLANNED')[0].date : 'No data'}`)
                    h1 
                        i.fas.fa-chevron-right.fa-xs
                        span.count #{sessions.filter(session => session.session_status === 'PLANNED').length}
                        span.title Planned Sessions
                .embla(data-type="planned")
                    .embla__viewport
                        .embla__container
                            each session in sessions.filter(session => session.session_status === 'PLANNED')
                                include ./components/discordSessionEmbed.pug
                .embla__dots
                script(type='text/template', id='embla-dot-template')
                    button(class="embla__dot" type='button')
        section
            details
                summary(data-type="past" data-session-date=`${sessions.filter(session => session.session_status === 'PLAYED' || session.session_status === 'CANCELED').reverse()[0] ? sessions.filter(session => session.session_status === 'PLAYED' || session.session_status === 'CANCELED' || session.session_status === 'DECLINED').reverse()[0].date : 'No data'}`)
                    h1 
                        i.fas.fa-chevron-right.fa-xs
                        span.count #{sessions.filter(session => session.session_status === 'PLAYED' || session.session_status === 'CANCELED').length}
                        span.title Past Sessions
                .embla(data-type="past")
                    .embla__viewport
                        .embla__container
                            each session in sessions.filter(session => session.session_status === 'PLAYED' || session.session_status === 'CANCELED').reverse()
                                include ./components/discordSessionEmbed.pug
                .embla__dots
                script(type='text/template', id='embla-dot-template')
                    button(class="embla__dot" type='button')
            